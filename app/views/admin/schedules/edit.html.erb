<!DOCTYPE html>
<html>
<head>
  <title>スケジュール編集</title>
  <style>
    label {
      display: block;
      margin: 5px 0;
    }
    input[type="time"] {
      padding: 5px;
    }
    input[type="submit"], button {
      margin-top: 10px;
      padding: 5px 10px;
    }
  </style>
</head>
<body>
  <h1>スケジュール編集</h1>

  <h2>映画: <%= @schedule.movie.name %> (ID: <%= @schedule.movie.id %>)</h2>

  <%= form_with model: @schedule, url: admin_schedule_path(@schedule), method: :put do |f| %>
    <div>
      <%= f.label :theater_id, '劇場' %>
      <%= select_tag "theater_id", options_from_collection_for_select(@theaters, :id, :name, @schedule.screen.theater_id), id: "theater", required: true %>
    </div>

    <div>
      <%= f.label :screen_id, 'スクリーン' %>
      <%= f.collection_select :screen_id, @schedule.screen.theater.screens, :id, :number, { selected: @schedule.screen_id }, id: "screen", required: true %>
    </div>

    <div>
      <%= f.label :start_time, '開始時刻' %>
      <%= f.time_field :start_time, value: @schedule.start_time.strftime('%H:%M') %>
    </div>

    <div>
      <%= f.label :end_time, '終了時刻' %>
      <%= f.time_field :end_time, value: @schedule.end_time.strftime('%H:%M') %>
    </div>

    <div>
      <%= f.submit '更新する' %>
    </div>
  <% end %>

  <%= link_to '削除する', admin_schedule_path(@schedule), data: { turbo_method: :delete, turbo_confirm: '本当に削除しますか？' } %>

  <%= link_to 'スケジュール詳細に戻る', admin_schedule_path(@schedule) %> |
  <%= link_to 'スケジュール一覧に戻る', admin_schedules_path %>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const theaterSelect = document.getElementById("theater");
      const screenSelect = document.getElementById("screen");

      theaterSelect.addEventListener("change", function () {
        const theaterId = this.value;
        fetch(`/admin/theaters/${theaterId}/screens`)
          .then(response => response.json())
          .then(data => {
            screenSelect.innerHTML = '<option value="">スクリーンを選択してください</option>';
            data.forEach(screen => {
              const option = document.createElement("option");
              option.value = screen.id;
              option.textContent = `スクリーン ${screen.number}`;
              screenSelect.appendChild(option);
            });
          });
      });
    });
  </script>
</body>
</html>
